// Generated by view binder compiler. Do not edit!
package com.example.internationaljobs.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.internationaljobs.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class NewjobrcrItemsBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final ImageView arrowImg;

  @NonNull
  public final TextView company;

  @NonNull
  public final TextView dateTxt;

  @NonNull
  public final TextView job;

  @NonNull
  public final CardView newjobCard;

  private NewjobrcrItemsBinding(@NonNull RelativeLayout rootView, @NonNull ImageView arrowImg,
      @NonNull TextView company, @NonNull TextView dateTxt, @NonNull TextView job,
      @NonNull CardView newjobCard) {
    this.rootView = rootView;
    this.arrowImg = arrowImg;
    this.company = company;
    this.dateTxt = dateTxt;
    this.job = job;
    this.newjobCard = newjobCard;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static NewjobrcrItemsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static NewjobrcrItemsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.newjobrcr_items, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static NewjobrcrItemsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.arrow_img;
      ImageView arrowImg = ViewBindings.findChildViewById(rootView, id);
      if (arrowImg == null) {
        break missingId;
      }

      id = R.id.company;
      TextView company = ViewBindings.findChildViewById(rootView, id);
      if (company == null) {
        break missingId;
      }

      id = R.id.date_txt;
      TextView dateTxt = ViewBindings.findChildViewById(rootView, id);
      if (dateTxt == null) {
        break missingId;
      }

      id = R.id.job;
      TextView job = ViewBindings.findChildViewById(rootView, id);
      if (job == null) {
        break missingId;
      }

      id = R.id.newjob_card;
      CardView newjobCard = ViewBindings.findChildViewById(rootView, id);
      if (newjobCard == null) {
        break missingId;
      }

      return new NewjobrcrItemsBinding((RelativeLayout) rootView, arrowImg, company, dateTxt, job,
          newjobCard);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
