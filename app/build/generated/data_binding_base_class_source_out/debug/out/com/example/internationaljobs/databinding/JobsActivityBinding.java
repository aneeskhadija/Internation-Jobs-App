// Generated by view binder compiler. Do not edit!
package com.example.internationaljobs.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.CheckBox;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.internationaljobs.R;
import com.rilixtech.widget.countrycodepicker.CountryCodePicker;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class JobsActivityBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView FilterCheck;

  @NonNull
  public final ImageView backbtn;

  @NonNull
  public final TextView catatext;

  @NonNull
  public final CheckBox contactCheck;

  @NonNull
  public final CountryCodePicker countryPiker;

  @NonNull
  public final EditText editTextSubcat;

  @NonNull
  public final CheckBox fulltimeCheck;

  @NonNull
  public final ImageView imagelog;

  @NonNull
  public final CheckBox inteerneCheck;

  @NonNull
  public final RelativeLayout jobdetFirstlayout;

  @NonNull
  public final CardView lnSelectCountry;

  @NonNull
  public final CheckBox parttimeCheck;

  @NonNull
  public final RecyclerView subjobTxt;

  private JobsActivityBinding(@NonNull LinearLayout rootView, @NonNull TextView FilterCheck,
      @NonNull ImageView backbtn, @NonNull TextView catatext, @NonNull CheckBox contactCheck,
      @NonNull CountryCodePicker countryPiker, @NonNull EditText editTextSubcat,
      @NonNull CheckBox fulltimeCheck, @NonNull ImageView imagelog, @NonNull CheckBox inteerneCheck,
      @NonNull RelativeLayout jobdetFirstlayout, @NonNull CardView lnSelectCountry,
      @NonNull CheckBox parttimeCheck, @NonNull RecyclerView subjobTxt) {
    this.rootView = rootView;
    this.FilterCheck = FilterCheck;
    this.backbtn = backbtn;
    this.catatext = catatext;
    this.contactCheck = contactCheck;
    this.countryPiker = countryPiker;
    this.editTextSubcat = editTextSubcat;
    this.fulltimeCheck = fulltimeCheck;
    this.imagelog = imagelog;
    this.inteerneCheck = inteerneCheck;
    this.jobdetFirstlayout = jobdetFirstlayout;
    this.lnSelectCountry = lnSelectCountry;
    this.parttimeCheck = parttimeCheck;
    this.subjobTxt = subjobTxt;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static JobsActivityBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static JobsActivityBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.jobs_activity, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static JobsActivityBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.Filter_check;
      TextView FilterCheck = ViewBindings.findChildViewById(rootView, id);
      if (FilterCheck == null) {
        break missingId;
      }

      id = R.id.backbtn;
      ImageView backbtn = ViewBindings.findChildViewById(rootView, id);
      if (backbtn == null) {
        break missingId;
      }

      id = R.id.catatext;
      TextView catatext = ViewBindings.findChildViewById(rootView, id);
      if (catatext == null) {
        break missingId;
      }

      id = R.id.contact_check;
      CheckBox contactCheck = ViewBindings.findChildViewById(rootView, id);
      if (contactCheck == null) {
        break missingId;
      }

      id = R.id.countryPiker;
      CountryCodePicker countryPiker = ViewBindings.findChildViewById(rootView, id);
      if (countryPiker == null) {
        break missingId;
      }

      id = R.id.editTextSubcat;
      EditText editTextSubcat = ViewBindings.findChildViewById(rootView, id);
      if (editTextSubcat == null) {
        break missingId;
      }

      id = R.id.fulltime_check;
      CheckBox fulltimeCheck = ViewBindings.findChildViewById(rootView, id);
      if (fulltimeCheck == null) {
        break missingId;
      }

      id = R.id.imagelog;
      ImageView imagelog = ViewBindings.findChildViewById(rootView, id);
      if (imagelog == null) {
        break missingId;
      }

      id = R.id.inteerne_check;
      CheckBox inteerneCheck = ViewBindings.findChildViewById(rootView, id);
      if (inteerneCheck == null) {
        break missingId;
      }

      id = R.id.jobdet_firstlayout;
      RelativeLayout jobdetFirstlayout = ViewBindings.findChildViewById(rootView, id);
      if (jobdetFirstlayout == null) {
        break missingId;
      }

      id = R.id.lnSelectCountry;
      CardView lnSelectCountry = ViewBindings.findChildViewById(rootView, id);
      if (lnSelectCountry == null) {
        break missingId;
      }

      id = R.id.parttime_check;
      CheckBox parttimeCheck = ViewBindings.findChildViewById(rootView, id);
      if (parttimeCheck == null) {
        break missingId;
      }

      id = R.id.subjob_txt;
      RecyclerView subjobTxt = ViewBindings.findChildViewById(rootView, id);
      if (subjobTxt == null) {
        break missingId;
      }

      return new JobsActivityBinding((LinearLayout) rootView, FilterCheck, backbtn, catatext,
          contactCheck, countryPiker, editTextSubcat, fulltimeCheck, imagelog, inteerneCheck,
          jobdetFirstlayout, lnSelectCountry, parttimeCheck, subjobTxt);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
